<?xml version="1.0" encoding="UTF-8"?>
<testng-results skipped="0" failed="20" ignored="28" total="113" passed="65">
  <reporter-output>
  </reporter-output>
  <suite name="CalculatorTest" duration-ms="0" started-at="2017-06-05T13:20:04Z" finished-at="2017-06-05T13:20:04Z">
    <groups>
    </groups>
  </suite> <!-- CalculatorTest -->
  <suite name="CalculatorTest (0)" duration-ms="106" started-at="2017-06-05T13:20:04Z" finished-at="2017-06-05T13:20:04Z">
    <groups>
      <group name="cos">
        <method signature="CosTest.testCos(double, double)[pri:0, instance:testng.calculator.CosTest@4c3e4790]" name="testCos" class="testng.calculator.CosTest"/>
      </group> <!-- cos -->
      <group name="sin">
        <method signature="SinTest.testSin(double, double)[pri:0, instance:testng.calculator.SinTest@38cccef]" name="testSin" class="testng.calculator.SinTest"/>
      </group> <!-- sin -->
      <group name="infinity">
        <method signature="CtgTest.ctg0()[pri:0, instance:testng.calculator.CtgTest@2d6d8735]" name="ctg0" class="testng.calculator.CtgTest"/>
        <method signature="TgTest.tg90()[pri:0, instance:testng.calculator.TgTest@6aceb1a5]" name="tg90" class="testng.calculator.TgTest"/>
      </group> <!-- infinity -->
    </groups>
    <test name="TrigonometryTest" duration-ms="24" started-at="2017-06-05T13:20:04Z" finished-at="2017-06-05T13:20:04Z">
      <class name="testng.calculator.TgTest">
        <test-method status="FAIL" signature="testTg(double, double)[pri:0, instance:testng.calculator.TgTest@5679c6c6]" name="testTg" duration-ms="1" started-at="2017-06-05T16:20:04Z" data-provider="tgDataProvider" finished-at="2017-06-05T16:20:04Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[30.0]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[0.577]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [0.577] but found [1.0]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [0.577] but found [1.0]
	at org.testng.Assert.fail(Assert.java:93)
	at org.testng.Assert.failNotEquals(Assert.java:512)
	at org.testng.Assert.assertEqualsImpl(Assert.java:134)
	at org.testng.Assert.assertEquals(Assert.java:115)
	at org.testng.Assert.assertEquals(Assert.java:178)
	at testng.calculator.TgTest.testTg(TgTest.java:14)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:108)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:661)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:869)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1193)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:126)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
	at org.testng.TestRunner.privateRun(TestRunner.java:744)
	at org.testng.TestRunner.run(TestRunner.java:602)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:380)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:375)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:340)
	at org.testng.SuiteRunner.run(SuiteRunner.java:289)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1301)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1297)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1226)
	at org.testng.TestNG.runSuites(TestNG.java:1144)
	at org.testng.TestNG.run(TestNG.java:1115)
	at testng.runner.TestRunner.main(TestRunner.java:33)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testTg -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:testng.calculator.TgTest@5679c6c6]" name="setUp" is-config="true" duration-ms="0" started-at="2017-06-05T16:20:04Z" finished-at="2017-06-05T16:20:04Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="testTg(double, double)[pri:0, instance:testng.calculator.TgTest@5679c6c6]" name="testTg" duration-ms="0" started-at="2017-06-05T16:20:04Z" data-provider="tgDataProvider" finished-at="2017-06-05T16:20:04Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[0.0]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[0.0]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testTg -->
        <test-method status="PASS" signature="testTg(double, double)[pri:0, instance:testng.calculator.TgTest@5679c6c6]" name="testTg" duration-ms="0" started-at="2017-06-05T16:20:04Z" data-provider="tgDataProvider" finished-at="2017-06-05T16:20:04Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[45.0]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[1.0]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testTg -->
        <test-method status="FAIL" signature="testTg(double, double)[pri:0, instance:testng.calculator.TgTest@5679c6c6]" name="testTg" duration-ms="0" started-at="2017-06-05T16:20:04Z" data-provider="tgDataProvider" finished-at="2017-06-05T16:20:04Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[60.0]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[1.732]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [1.732] but found [1.0]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [1.732] but found [1.0]
	at org.testng.Assert.fail(Assert.java:93)
	at org.testng.Assert.failNotEquals(Assert.java:512)
	at org.testng.Assert.assertEqualsImpl(Assert.java:134)
	at org.testng.Assert.assertEquals(Assert.java:115)
	at org.testng.Assert.assertEquals(Assert.java:178)
	at testng.calculator.TgTest.testTg(TgTest.java:14)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:108)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:661)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:869)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1193)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:126)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
	at org.testng.TestRunner.privateRun(TestRunner.java:744)
	at org.testng.TestRunner.run(TestRunner.java:602)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:380)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:375)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:340)
	at org.testng.SuiteRunner.run(SuiteRunner.java:289)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1301)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1297)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1226)
	at org.testng.TestNG.runSuites(TestNG.java:1144)
	at org.testng.TestNG.run(TestNG.java:1115)
	at testng.runner.TestRunner.main(TestRunner.java:33)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testTg -->
      </class> <!-- testng.calculator.TgTest -->
      <class name="testng.calculator.CosTest">
        <test-method status="PASS" signature="setUp()[pri:0, instance:testng.calculator.CosTest@4c3e4790]" name="setUp" is-config="true" duration-ms="1" started-at="2017-06-05T16:20:04Z" finished-at="2017-06-05T16:20:04Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="setStartPhrase()[pri:0, instance:testng.calculator.CosTest@4c3e4790]" name="setStartPhrase" is-config="true" duration-ms="0" started-at="2017-06-05T16:20:04Z" finished-at="2017-06-05T16:20:04Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setStartPhrase -->
        <test-method status="FAIL" signature="testCos(double, double)[pri:0, instance:testng.calculator.CosTest@4c3e4790]" name="testCos" duration-ms="2" started-at="2017-06-05T16:20:04Z" data-provider="cosDataProvider" finished-at="2017-06-05T16:20:04Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[0.0]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[1.0]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [1.0] but found [0.0]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [1.0] but found [0.0]
	at org.testng.Assert.fail(Assert.java:93)
	at org.testng.Assert.failNotEquals(Assert.java:512)
	at org.testng.Assert.assertEqualsImpl(Assert.java:134)
	at org.testng.Assert.assertEquals(Assert.java:115)
	at org.testng.Assert.assertEquals(Assert.java:178)
	at testng.calculator.CosTest.testCos(CosTest.java:14)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:108)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:661)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:869)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1193)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:126)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
	at org.testng.TestRunner.privateRun(TestRunner.java:744)
	at org.testng.TestRunner.run(TestRunner.java:602)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:380)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:375)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:340)
	at org.testng.SuiteRunner.run(SuiteRunner.java:289)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1301)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1297)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1226)
	at org.testng.TestNG.runSuites(TestNG.java:1144)
	at org.testng.TestNG.run(TestNG.java:1115)
	at testng.runner.TestRunner.main(TestRunner.java:33)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCos -->
        <test-method status="FAIL" signature="testCos(double, double)[pri:0, instance:testng.calculator.CosTest@4c3e4790]" name="testCos" duration-ms="0" started-at="2017-06-05T16:20:04Z" data-provider="cosDataProvider" finished-at="2017-06-05T16:20:04Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[60.0]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[0.5]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [0.5] but found [0.866]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [0.5] but found [0.866]
	at org.testng.Assert.fail(Assert.java:93)
	at org.testng.Assert.failNotEquals(Assert.java:512)
	at org.testng.Assert.assertEqualsImpl(Assert.java:134)
	at org.testng.Assert.assertEquals(Assert.java:115)
	at org.testng.Assert.assertEquals(Assert.java:178)
	at testng.calculator.CosTest.testCos(CosTest.java:14)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:108)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:661)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:869)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1193)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:126)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
	at org.testng.TestRunner.privateRun(TestRunner.java:744)
	at org.testng.TestRunner.run(TestRunner.java:602)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:380)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:375)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:340)
	at org.testng.SuiteRunner.run(SuiteRunner.java:289)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1301)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1297)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1226)
	at org.testng.TestNG.runSuites(TestNG.java:1144)
	at org.testng.TestNG.run(TestNG.java:1115)
	at testng.runner.TestRunner.main(TestRunner.java:33)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCos -->
        <test-method status="PASS" signature="testCos(double, double)[pri:0, instance:testng.calculator.CosTest@4c3e4790]" name="testCos" duration-ms="0" started-at="2017-06-05T16:20:04Z" data-provider="cosDataProvider" finished-at="2017-06-05T16:20:04Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[45.0]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[0.707]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCos -->
        <test-method status="FAIL" signature="testCos(double, double)[pri:0, instance:testng.calculator.CosTest@4c3e4790]" name="testCos" duration-ms="0" started-at="2017-06-05T16:20:04Z" data-provider="cosDataProvider" finished-at="2017-06-05T16:20:04Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[30.0]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[0.866]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [0.866] but found [0.5]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [0.866] but found [0.5]
	at org.testng.Assert.fail(Assert.java:93)
	at org.testng.Assert.failNotEquals(Assert.java:512)
	at org.testng.Assert.assertEqualsImpl(Assert.java:134)
	at org.testng.Assert.assertEquals(Assert.java:115)
	at org.testng.Assert.assertEquals(Assert.java:178)
	at testng.calculator.CosTest.testCos(CosTest.java:14)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:108)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:661)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:869)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1193)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:126)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
	at org.testng.TestRunner.privateRun(TestRunner.java:744)
	at org.testng.TestRunner.run(TestRunner.java:602)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:380)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:375)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:340)
	at org.testng.SuiteRunner.run(SuiteRunner.java:289)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1301)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1297)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1226)
	at org.testng.TestNG.runSuites(TestNG.java:1144)
	at org.testng.TestNG.run(TestNG.java:1115)
	at testng.runner.TestRunner.main(TestRunner.java:33)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCos -->
        <test-method status="PASS" signature="setFinishPhrase()[pri:0, instance:testng.calculator.CosTest@4c3e4790]" name="setFinishPhrase" is-config="true" duration-ms="0" started-at="2017-06-05T16:20:04Z" finished-at="2017-06-05T16:20:04Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setFinishPhrase -->
        <test-method status="FAIL" signature="testCos(double, double)[pri:0, instance:testng.calculator.CosTest@4c3e4790]" name="testCos" duration-ms="0" started-at="2017-06-05T16:20:04Z" data-provider="cosDataProvider" finished-at="2017-06-05T16:20:04Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[90.0]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[0.0]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [0.0] but found [1.0]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [0.0] but found [1.0]
	at org.testng.Assert.fail(Assert.java:93)
	at org.testng.Assert.failNotEquals(Assert.java:512)
	at org.testng.Assert.assertEqualsImpl(Assert.java:134)
	at org.testng.Assert.assertEquals(Assert.java:115)
	at org.testng.Assert.assertEquals(Assert.java:178)
	at testng.calculator.CosTest.testCos(CosTest.java:14)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:108)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:661)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:869)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1193)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:126)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
	at org.testng.TestRunner.privateRun(TestRunner.java:744)
	at org.testng.TestRunner.run(TestRunner.java:602)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:380)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:375)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:340)
	at org.testng.SuiteRunner.run(SuiteRunner.java:289)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1301)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1297)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1226)
	at org.testng.TestNG.runSuites(TestNG.java:1144)
	at org.testng.TestNG.run(TestNG.java:1115)
	at testng.runner.TestRunner.main(TestRunner.java:33)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCos -->
        <test-method status="PASS" signature="setStartPhraseSin()[pri:0, instance:testng.calculator.CosTest@4c3e4790]" name="setStartPhraseSin" is-config="true" duration-ms="0" started-at="2017-06-05T16:20:04Z" finished-at="2017-06-05T16:20:04Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setStartPhraseSin -->
        <test-method status="PASS" signature="setFinishPhraseSin()[pri:0, instance:testng.calculator.CosTest@4c3e4790]" name="setFinishPhraseSin" is-config="true" duration-ms="0" started-at="2017-06-05T16:20:04Z" finished-at="2017-06-05T16:20:04Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setFinishPhraseSin -->
      </class> <!-- testng.calculator.CosTest -->
      <class name="testng.calculator.SinTest">
        <test-method status="PASS" signature="testSin(double, double)[pri:0, instance:testng.calculator.SinTest@38cccef]" name="testSin" duration-ms="0" started-at="2017-06-05T16:20:04Z" data-provider="sinDataProvider" finished-at="2017-06-05T16:20:04Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[45.0]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[0.707]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSin -->
        <test-method status="PASS" signature="testSin(double, double)[pri:0, instance:testng.calculator.SinTest@38cccef]" name="testSin" duration-ms="0" started-at="2017-06-05T16:20:04Z" data-provider="sinDataProvider" finished-at="2017-06-05T16:20:04Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[0.0]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[0.0]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSin -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:testng.calculator.SinTest@38cccef]" name="setUp" is-config="true" duration-ms="0" started-at="2017-06-05T16:20:04Z" finished-at="2017-06-05T16:20:04Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="testSin(double, double)[pri:0, instance:testng.calculator.SinTest@38cccef]" name="testSin" duration-ms="0" started-at="2017-06-05T16:20:04Z" data-provider="sinDataProvider" finished-at="2017-06-05T16:20:04Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[30.0]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[0.5]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSin -->
        <test-method status="PASS" signature="testSin(double, double)[pri:0, instance:testng.calculator.SinTest@38cccef]" name="testSin" duration-ms="0" started-at="2017-06-05T16:20:04Z" data-provider="sinDataProvider" finished-at="2017-06-05T16:20:04Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[90.0]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[1.0]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSin -->
        <test-method status="PASS" signature="testSin(double, double)[pri:0, instance:testng.calculator.SinTest@38cccef]" name="testSin" duration-ms="0" started-at="2017-06-05T16:20:04Z" data-provider="sinDataProvider" finished-at="2017-06-05T16:20:04Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[60.0]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[0.866]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSin -->
      </class> <!-- testng.calculator.SinTest -->
      <class name="testng.calculator.CtgTest">
        <test-method status="PASS" signature="setUp()[pri:0, instance:testng.calculator.CtgTest@27ddd392]" name="setUp" is-config="true" duration-ms="0" started-at="2017-06-05T16:20:04Z" finished-at="2017-06-05T16:20:04Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="FAIL" signature="testCtg(double, double)[pri:0, instance:testng.calculator.CtgTest@27ddd392]" name="testCtg" duration-ms="1" started-at="2017-06-05T16:20:04Z" data-provider="ctgDataProvider" finished-at="2017-06-05T16:20:04Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[30.0]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[1.732]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [1.732] but found [1.0]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [1.732] but found [1.0]
	at org.testng.Assert.fail(Assert.java:93)
	at org.testng.Assert.failNotEquals(Assert.java:512)
	at org.testng.Assert.assertEqualsImpl(Assert.java:134)
	at org.testng.Assert.assertEquals(Assert.java:115)
	at org.testng.Assert.assertEquals(Assert.java:178)
	at testng.calculator.CtgTest.testCtg(CtgTest.java:14)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:108)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:661)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:869)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1193)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:126)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
	at org.testng.TestRunner.privateRun(TestRunner.java:744)
	at org.testng.TestRunner.run(TestRunner.java:602)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:380)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:375)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:340)
	at org.testng.SuiteRunner.run(SuiteRunner.java:289)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1301)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1297)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1226)
	at org.testng.TestNG.runSuites(TestNG.java:1144)
	at org.testng.TestNG.run(TestNG.java:1115)
	at testng.runner.TestRunner.main(TestRunner.java:33)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCtg -->
        <test-method status="FAIL" signature="testCtg(double, double)[pri:0, instance:testng.calculator.CtgTest@27ddd392]" name="testCtg" duration-ms="0" started-at="2017-06-05T16:20:04Z" data-provider="ctgDataProvider" finished-at="2017-06-05T16:20:04Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[90.0]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[0.0]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [0.0] but found [1.0]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [0.0] but found [1.0]
	at org.testng.Assert.fail(Assert.java:93)
	at org.testng.Assert.failNotEquals(Assert.java:512)
	at org.testng.Assert.assertEqualsImpl(Assert.java:134)
	at org.testng.Assert.assertEquals(Assert.java:115)
	at org.testng.Assert.assertEquals(Assert.java:178)
	at testng.calculator.CtgTest.testCtg(CtgTest.java:14)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:108)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:661)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:869)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1193)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:126)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
	at org.testng.TestRunner.privateRun(TestRunner.java:744)
	at org.testng.TestRunner.run(TestRunner.java:602)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:380)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:375)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:340)
	at org.testng.SuiteRunner.run(SuiteRunner.java:289)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1301)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1297)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1226)
	at org.testng.TestNG.runSuites(TestNG.java:1144)
	at org.testng.TestNG.run(TestNG.java:1115)
	at testng.runner.TestRunner.main(TestRunner.java:33)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCtg -->
        <test-method status="PASS" signature="testCtg(double, double)[pri:0, instance:testng.calculator.CtgTest@27ddd392]" name="testCtg" duration-ms="0" started-at="2017-06-05T16:20:04Z" data-provider="ctgDataProvider" finished-at="2017-06-05T16:20:04Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[45.0]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[1.0]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCtg -->
        <test-method status="FAIL" signature="testCtg(double, double)[pri:0, instance:testng.calculator.CtgTest@27ddd392]" name="testCtg" duration-ms="0" started-at="2017-06-05T16:20:04Z" data-provider="ctgDataProvider" finished-at="2017-06-05T16:20:04Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[60.0]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[0.577]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [0.577] but found [1.0]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [0.577] but found [1.0]
	at org.testng.Assert.fail(Assert.java:93)
	at org.testng.Assert.failNotEquals(Assert.java:512)
	at org.testng.Assert.assertEqualsImpl(Assert.java:134)
	at org.testng.Assert.assertEquals(Assert.java:115)
	at org.testng.Assert.assertEquals(Assert.java:178)
	at testng.calculator.CtgTest.testCtg(CtgTest.java:14)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:108)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:661)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:869)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1193)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:126)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
	at org.testng.TestRunner.privateRun(TestRunner.java:744)
	at org.testng.TestRunner.run(TestRunner.java:602)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:380)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:375)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:340)
	at org.testng.SuiteRunner.run(SuiteRunner.java:289)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1301)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1297)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1226)
	at org.testng.TestNG.runSuites(TestNG.java:1144)
	at org.testng.TestNG.run(TestNG.java:1115)
	at testng.runner.TestRunner.main(TestRunner.java:33)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCtg -->
      </class> <!-- testng.calculator.CtgTest -->
    </test> <!-- TrigonometryTest -->
    <test name="PosOrNegTest" duration-ms="3" started-at="2017-06-05T13:20:04Z" finished-at="2017-06-05T13:20:04Z">
      <class name="testng.calculator.IsPositiveTest">
        <test-method status="PASS" signature="testPositive(long, boolean)[pri:0, instance:testng.calculator.IsPositiveTest@5ecddf8f]" name="testPositive" duration-ms="0" started-at="2017-06-05T16:20:04Z" data-provider="posDataProvider" finished-at="2017-06-05T16:20:04Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testPositive -->
        <test-method status="PASS" signature="testPositive(long, boolean)[pri:0, instance:testng.calculator.IsPositiveTest@5ecddf8f]" name="testPositive" duration-ms="0" started-at="2017-06-05T16:20:04Z" data-provider="posDataProvider" finished-at="2017-06-05T16:20:04Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[true]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testPositive -->
        <test-method status="PASS" signature="testPositive(long, boolean)[pri:0, instance:testng.calculator.IsPositiveTest@5ecddf8f]" name="testPositive" duration-ms="1" started-at="2017-06-05T16:20:04Z" data-provider="posDataProvider" finished-at="2017-06-05T16:20:04Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[-1]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testPositive -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:testng.calculator.IsPositiveTest@5ecddf8f]" name="setUp" is-config="true" duration-ms="0" started-at="2017-06-05T16:20:04Z" finished-at="2017-06-05T16:20:04Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="testPositive(long, boolean)[pri:0, instance:testng.calculator.IsPositiveTest@5ecddf8f]" name="testPositive" duration-ms="0" started-at="2017-06-05T16:20:04Z" data-provider="posDataProvider" finished-at="2017-06-05T16:20:04Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[500]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[true]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testPositive -->
        <test-method status="PASS" signature="testPositive(long, boolean)[pri:0, instance:testng.calculator.IsPositiveTest@5ecddf8f]" name="testPositive" duration-ms="0" started-at="2017-06-05T16:20:04Z" data-provider="posDataProvider" finished-at="2017-06-05T16:20:04Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[-500]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testPositive -->
      </class> <!-- testng.calculator.IsPositiveTest -->
      <class name="testng.calculator.IsNegativeTest">
        <test-method status="PASS" signature="testNegative(long, boolean)[pri:0, instance:testng.calculator.IsNegativeTest@6c629d6e]" name="testNegative" duration-ms="1" started-at="2017-06-05T16:20:04Z" data-provider="negDataProvider" finished-at="2017-06-05T16:20:04Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[-1]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[true]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testNegative -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:testng.calculator.IsNegativeTest@6c629d6e]" name="setUp" is-config="true" duration-ms="0" started-at="2017-06-05T16:20:04Z" finished-at="2017-06-05T16:20:04Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="testNegative(long, boolean)[pri:0, instance:testng.calculator.IsNegativeTest@6c629d6e]" name="testNegative" duration-ms="0" started-at="2017-06-05T16:20:04Z" data-provider="negDataProvider" finished-at="2017-06-05T16:20:04Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testNegative -->
        <test-method status="PASS" signature="testNegative(long, boolean)[pri:0, instance:testng.calculator.IsNegativeTest@6c629d6e]" name="testNegative" duration-ms="0" started-at="2017-06-05T16:20:04Z" data-provider="negDataProvider" finished-at="2017-06-05T16:20:04Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[-500]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[true]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testNegative -->
        <test-method status="PASS" signature="testNegative(long, boolean)[pri:0, instance:testng.calculator.IsNegativeTest@6c629d6e]" name="testNegative" duration-ms="0" started-at="2017-06-05T16:20:04Z" data-provider="negDataProvider" finished-at="2017-06-05T16:20:04Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[500]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testNegative -->
        <test-method status="PASS" signature="testNegative(long, boolean)[pri:0, instance:testng.calculator.IsNegativeTest@6c629d6e]" name="testNegative" duration-ms="0" started-at="2017-06-05T16:20:04Z" data-provider="negDataProvider" finished-at="2017-06-05T16:20:04Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testNegative -->
      </class> <!-- testng.calculator.IsNegativeTest -->
    </test> <!-- PosOrNegTest -->
    <test name="MainFunctionsTest" duration-ms="11" started-at="2017-06-05T13:20:04Z" finished-at="2017-06-05T13:20:04Z">
      <class name="testng.calculator.DivLongTest">
        <test-method status="PASS" signature="setUp()[pri:0, instance:testng.calculator.DivLongTest@27082746]" name="setUp" is-config="true" duration-ms="0" started-at="2017-06-05T16:20:04Z" finished-at="2017-06-05T16:20:04Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="divByZero()[pri:0, instance:testng.calculator.DivLongTest@27082746]" name="divByZero" duration-ms="1" started-at="2017-06-05T16:20:04Z" finished-at="2017-06-05T16:20:04Z">
          <exception class="java.lang.NumberFormatException">
            <message>
              <![CDATA[Attempt to divide by zero]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.NumberFormatException: Attempt to divide by zero
	at com.epam.tat.module4.Calculator.div(Calculator.java:34)
	at testng.calculator.DivLongTest.divByZero(DivLongTest.java:19)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:108)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:661)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:869)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1193)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:126)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
	at org.testng.TestRunner.privateRun(TestRunner.java:744)
	at org.testng.TestRunner.run(TestRunner.java:602)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:380)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:375)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:340)
	at org.testng.SuiteRunner.run(SuiteRunner.java:289)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1301)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1297)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1226)
	at org.testng.TestNG.runSuites(TestNG.java:1144)
	at org.testng.TestNG.run(TestNG.java:1115)
	at testng.runner.TestRunner.main(TestRunner.java:33)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.NumberFormatException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- divByZero -->
        <test-method status="PASS" signature="testDivLong(long, long, long)[pri:0, instance:testng.calculator.DivLongTest@27082746]" name="testDivLong" duration-ms="0" started-at="2017-06-05T16:20:04Z" data-provider="divDataProvider" finished-at="2017-06-05T16:20:04Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[2000]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[1000]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[2]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testDivLong -->
        <test-method status="PASS" signature="testDivLong(long, long, long)[pri:0, instance:testng.calculator.DivLongTest@27082746]" name="testDivLong" duration-ms="0" started-at="2017-06-05T16:20:04Z" data-provider="divDataProvider" finished-at="2017-06-05T16:20:04Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[-4]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[-2]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[2]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testDivLong -->
        <test-method status="PASS" signature="testDivLong(long, long, long)[pri:0, instance:testng.calculator.DivLongTest@27082746]" name="testDivLong" duration-ms="0" started-at="2017-06-05T16:20:04Z" data-provider="divDataProvider" finished-at="2017-06-05T16:20:04Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[-8]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[4]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[-2]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testDivLong -->
        <test-method status="PASS" signature="testDivLong(long, long, long)[pri:0, instance:testng.calculator.DivLongTest@27082746]" name="testDivLong" duration-ms="0" started-at="2017-06-05T16:20:04Z" data-provider="divDataProvider" finished-at="2017-06-05T16:20:04Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[2]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[-1]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[-2]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testDivLong -->
      </class> <!-- testng.calculator.DivLongTest -->
      <class name="testng.calculator.SubLongTest">
        <test-method status="PASS" signature="testSubLong(long, long, long)[pri:0, instance:testng.calculator.SubLongTest@7d4793a8]" name="testSubLong" duration-ms="0" started-at="2017-06-05T16:20:04Z" data-provider="subDataProvider" finished-at="2017-06-05T16:20:04Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSubLong -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:testng.calculator.SubLongTest@7d4793a8]" name="setUp" is-config="true" duration-ms="0" started-at="2017-06-05T16:20:04Z" finished-at="2017-06-05T16:20:04Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="testSubLong(long, long, long)[pri:0, instance:testng.calculator.SubLongTest@7d4793a8]" name="testSubLong" duration-ms="0" started-at="2017-06-05T16:20:04Z" data-provider="subDataProvider" finished-at="2017-06-05T16:20:04Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[2]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSubLong -->
        <test-method status="PASS" signature="testSubLong(long, long, long)[pri:0, instance:testng.calculator.SubLongTest@7d4793a8]" name="testSubLong" duration-ms="0" started-at="2017-06-05T16:20:04Z" data-provider="subDataProvider" finished-at="2017-06-05T16:20:04Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[-1]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[-2]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSubLong -->
        <test-method status="PASS" signature="testSubLong(long, long, long)[pri:0, instance:testng.calculator.SubLongTest@7d4793a8]" name="testSubLong" duration-ms="0" started-at="2017-06-05T16:20:04Z" data-provider="subDataProvider" finished-at="2017-06-05T16:20:04Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[2]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[-1]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[3]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSubLong -->
        <test-method status="PASS" signature="testSubLong(long, long, long)[pri:0, instance:testng.calculator.SubLongTest@7d4793a8]" name="testSubLong" duration-ms="0" started-at="2017-06-05T16:20:04Z" data-provider="subDataProvider" finished-at="2017-06-05T16:20:04Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[1500]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[2500]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[-1000]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSubLong -->
      </class> <!-- testng.calculator.SubLongTest -->
      <class name="testng.calculator.SubDoubleTest">
        <test-method status="PASS" signature="setUp()[pri:0, instance:testng.calculator.SubDoubleTest@449b2d27]" name="setUp" is-config="true" duration-ms="0" started-at="2017-06-05T16:20:04Z" finished-at="2017-06-05T16:20:04Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="testSubDouble(double, double, double)[pri:0, instance:testng.calculator.SubDoubleTest@449b2d27]" name="testSubDouble" duration-ms="0" started-at="2017-06-05T16:20:04Z" data-provider="subDataProvider" finished-at="2017-06-05T16:20:04Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[2.0]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[1.0]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[1.0]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSubDouble -->
        <test-method status="PASS" signature="testSubDouble(double, double, double)[pri:0, instance:testng.calculator.SubDoubleTest@449b2d27]" name="testSubDouble" duration-ms="0" started-at="2017-06-05T16:20:04Z" data-provider="subDataProvider" finished-at="2017-06-05T16:20:04Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[0.0]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[0.0]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[0.0]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSubDouble -->
        <test-method status="PASS" signature="testSubDouble(double, double, double)[pri:0, instance:testng.calculator.SubDoubleTest@449b2d27]" name="testSubDouble" duration-ms="0" started-at="2017-06-05T16:20:04Z" data-provider="subDataProvider" finished-at="2017-06-05T16:20:04Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[-1.1]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[-1.1]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[0.0]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSubDouble -->
        <test-method status="PASS" signature="testSubDouble(double, double, double)[pri:0, instance:testng.calculator.SubDoubleTest@449b2d27]" name="testSubDouble" duration-ms="0" started-at="2017-06-05T16:20:04Z" data-provider="subDataProvider" finished-at="2017-06-05T16:20:04Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[20.0]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[1.5]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[18.5]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSubDouble -->
        <test-method status="FAIL" signature="testSubDouble(double, double, double)[pri:0, instance:testng.calculator.SubDoubleTest@449b2d27]" name="testSubDouble" duration-ms="0" started-at="2017-06-05T16:20:04Z" data-provider="subDataProvider" finished-at="2017-06-05T16:20:04Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[1.5555]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[1.0]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[0.5555]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [0.5555] but found [0.5555000000000001]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [0.5555] but found [0.5555000000000001]
	at org.testng.Assert.fail(Assert.java:93)
	at org.testng.Assert.failNotEquals(Assert.java:512)
	at org.testng.Assert.assertEqualsImpl(Assert.java:134)
	at org.testng.Assert.assertEquals(Assert.java:115)
	at org.testng.Assert.assertEquals(Assert.java:178)
	at testng.calculator.SubDoubleTest.testSubDouble(SubDoubleTest.java:14)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:108)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:661)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:869)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1193)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:126)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
	at org.testng.TestRunner.privateRun(TestRunner.java:744)
	at org.testng.TestRunner.run(TestRunner.java:602)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:380)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:375)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:340)
	at org.testng.SuiteRunner.run(SuiteRunner.java:289)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1301)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1297)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1226)
	at org.testng.TestNG.runSuites(TestNG.java:1144)
	at org.testng.TestNG.run(TestNG.java:1115)
	at testng.runner.TestRunner.main(TestRunner.java:33)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSubDouble -->
        <test-method status="PASS" signature="testSubDouble(double, double, double)[pri:0, instance:testng.calculator.SubDoubleTest@449b2d27]" name="testSubDouble" duration-ms="0" started-at="2017-06-05T16:20:04Z" data-provider="subDataProvider" finished-at="2017-06-05T16:20:04Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[2.1]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[-1.1]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[3.2]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSubDouble -->
      </class> <!-- testng.calculator.SubDoubleTest -->
      <class name="testng.calculator.SumLongTest">
        <test-method status="PASS" signature="testSum(long, long, long)[pri:0, instance:testng.calculator.SumLongTest@768debd]" name="testSum" duration-ms="0" started-at="2017-06-05T16:20:04Z" data-provider="sumDataProvider" finished-at="2017-06-05T16:20:04Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSum -->
        <test-method status="PASS" signature="testSum(long, long, long)[pri:0, instance:testng.calculator.SumLongTest@768debd]" name="testSum" duration-ms="1" started-at="2017-06-05T16:20:04Z" data-provider="sumDataProvider" finished-at="2017-06-05T16:20:04Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[-1]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[-1]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[-2]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSum -->
        <test-method status="PASS" signature="testSum(long, long, long)[pri:0, instance:testng.calculator.SumLongTest@768debd]" name="testSum" duration-ms="0" started-at="2017-06-05T16:20:04Z" data-provider="sumDataProvider" finished-at="2017-06-05T16:20:04Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[2]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSum -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:testng.calculator.SumLongTest@768debd]" name="setUp" is-config="true" duration-ms="0" started-at="2017-06-05T16:20:04Z" finished-at="2017-06-05T16:20:04Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="testSum(long, long, long)[pri:0, instance:testng.calculator.SumLongTest@768debd]" name="testSum" duration-ms="0" started-at="2017-06-05T16:20:04Z" data-provider="sumDataProvider" finished-at="2017-06-05T16:20:04Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[-5]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[2]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[-3]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSum -->
        <test-method status="PASS" signature="testSum(long, long, long)[pri:0, instance:testng.calculator.SumLongTest@768debd]" name="testSum" duration-ms="0" started-at="2017-06-05T16:20:04Z" data-provider="sumDataProvider" finished-at="2017-06-05T16:20:04Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[2]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[-1]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSum -->
        <test-method status="PASS" signature="testSum(long, long, long)[pri:0, instance:testng.calculator.SumLongTest@768debd]" name="testSum" duration-ms="0" started-at="2017-06-05T16:20:04Z" data-provider="sumDataProvider" finished-at="2017-06-05T16:20:04Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[5000]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[5000]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[10000]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSum -->
      </class> <!-- testng.calculator.SumLongTest -->
      <class name="testng.calculator.MultDoubleTest">
        <test-method status="PASS" signature="setUp()[pri:0, instance:testng.calculator.MultDoubleTest@66133adc]" name="setUp" is-config="true" duration-ms="0" started-at="2017-06-05T16:20:04Z" finished-at="2017-06-05T16:20:04Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="FAIL" signature="testMultDouble(double, double, double)[pri:0, instance:testng.calculator.MultDoubleTest@66133adc]" name="testMultDouble" duration-ms="0" started-at="2017-06-05T16:20:04Z" data-provider="multDataProvider" finished-at="2017-06-05T16:20:04Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[2.1]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[-1.1]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[-2.31]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [-2.31] but found [-3.0]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [-2.31] but found [-3.0]
	at org.testng.Assert.fail(Assert.java:93)
	at org.testng.Assert.failNotEquals(Assert.java:512)
	at org.testng.Assert.assertEqualsImpl(Assert.java:134)
	at org.testng.Assert.assertEquals(Assert.java:115)
	at org.testng.Assert.assertEquals(Assert.java:178)
	at testng.calculator.MultDoubleTest.testMultDouble(MultDoubleTest.java:14)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:108)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:661)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:869)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1193)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:126)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
	at org.testng.TestRunner.privateRun(TestRunner.java:744)
	at org.testng.TestRunner.run(TestRunner.java:602)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:380)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:375)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:340)
	at org.testng.SuiteRunner.run(SuiteRunner.java:289)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1301)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1297)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1226)
	at org.testng.TestNG.runSuites(TestNG.java:1144)
	at org.testng.TestNG.run(TestNG.java:1115)
	at testng.runner.TestRunner.main(TestRunner.java:33)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testMultDouble -->
        <test-method status="PASS" signature="testMultDouble(double, double, double)[pri:0, instance:testng.calculator.MultDoubleTest@66133adc]" name="testMultDouble" duration-ms="0" started-at="2017-06-05T16:20:04Z" data-provider="multDataProvider" finished-at="2017-06-05T16:20:04Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[0.0]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[0.0]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[0.0]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testMultDouble -->
        <test-method status="FAIL" signature="testMultDouble(double, double, double)[pri:0, instance:testng.calculator.MultDoubleTest@66133adc]" name="testMultDouble" duration-ms="0" started-at="2017-06-05T16:20:04Z" data-provider="multDataProvider" finished-at="2017-06-05T16:20:04Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[1.555]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[1.0]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[1.555]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [1.555] but found [1.0]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [1.555] but found [1.0]
	at org.testng.Assert.fail(Assert.java:93)
	at org.testng.Assert.failNotEquals(Assert.java:512)
	at org.testng.Assert.assertEqualsImpl(Assert.java:134)
	at org.testng.Assert.assertEquals(Assert.java:115)
	at org.testng.Assert.assertEquals(Assert.java:178)
	at testng.calculator.MultDoubleTest.testMultDouble(MultDoubleTest.java:14)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:108)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:661)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:869)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1193)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:126)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
	at org.testng.TestRunner.privateRun(TestRunner.java:744)
	at org.testng.TestRunner.run(TestRunner.java:602)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:380)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:375)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:340)
	at org.testng.SuiteRunner.run(SuiteRunner.java:289)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1301)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1297)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1226)
	at org.testng.TestNG.runSuites(TestNG.java:1144)
	at org.testng.TestNG.run(TestNG.java:1115)
	at testng.runner.TestRunner.main(TestRunner.java:33)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testMultDouble -->
        <test-method status="PASS" signature="testMultDouble(double, double, double)[pri:0, instance:testng.calculator.MultDoubleTest@66133adc]" name="testMultDouble" duration-ms="0" started-at="2017-06-05T16:20:04Z" data-provider="multDataProvider" finished-at="2017-06-05T16:20:04Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[2.0]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[1.0]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[2.0]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testMultDouble -->
        <test-method status="FAIL" signature="testMultDouble(double, double, double)[pri:0, instance:testng.calculator.MultDoubleTest@66133adc]" name="testMultDouble" duration-ms="0" started-at="2017-06-05T16:20:04Z" data-provider="multDataProvider" finished-at="2017-06-05T16:20:04Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[-1.1]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[-1.1]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[1.21]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [1.21] but found [1.0]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [1.21] but found [1.0]
	at org.testng.Assert.fail(Assert.java:93)
	at org.testng.Assert.failNotEquals(Assert.java:512)
	at org.testng.Assert.assertEqualsImpl(Assert.java:134)
	at org.testng.Assert.assertEquals(Assert.java:115)
	at org.testng.Assert.assertEquals(Assert.java:178)
	at testng.calculator.MultDoubleTest.testMultDouble(MultDoubleTest.java:14)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:108)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:661)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:869)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1193)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:126)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
	at org.testng.TestRunner.privateRun(TestRunner.java:744)
	at org.testng.TestRunner.run(TestRunner.java:602)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:380)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:375)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:340)
	at org.testng.SuiteRunner.run(SuiteRunner.java:289)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1301)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1297)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1226)
	at org.testng.TestNG.runSuites(TestNG.java:1144)
	at org.testng.TestNG.run(TestNG.java:1115)
	at testng.runner.TestRunner.main(TestRunner.java:33)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testMultDouble -->
        <test-method status="PASS" signature="testMultDouble(double, double, double)[pri:0, instance:testng.calculator.MultDoubleTest@66133adc]" name="testMultDouble" duration-ms="0" started-at="2017-06-05T16:20:04Z" data-provider="multDataProvider" finished-at="2017-06-05T16:20:04Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[20.0]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[1.5]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[30.0]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testMultDouble -->
      </class> <!-- testng.calculator.MultDoubleTest -->
      <class name="testng.calculator.MultLongTest">
        <test-method status="PASS" signature="setUp()[pri:0, instance:testng.calculator.MultLongTest@7bfcd12c]" name="setUp" is-config="true" duration-ms="1" started-at="2017-06-05T16:20:04Z" finished-at="2017-06-05T16:20:04Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="testMultLong(long, long, long)[pri:0, instance:testng.calculator.MultLongTest@7bfcd12c]" name="testMultLong" duration-ms="0" started-at="2017-06-05T16:20:04Z" data-provider="multDataProvider" finished-at="2017-06-05T16:20:04Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testMultLong -->
        <test-method status="PASS" signature="testMultLong(long, long, long)[pri:0, instance:testng.calculator.MultLongTest@7bfcd12c]" name="testMultLong" duration-ms="0" started-at="2017-06-05T16:20:04Z" data-provider="multDataProvider" finished-at="2017-06-05T16:20:04Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[2]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[-1]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[-2]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testMultLong -->
        <test-method status="PASS" signature="testMultLong(long, long, long)[pri:0, instance:testng.calculator.MultLongTest@7bfcd12c]" name="testMultLong" duration-ms="0" started-at="2017-06-05T16:20:04Z" data-provider="multDataProvider" finished-at="2017-06-05T16:20:04Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[-1]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testMultLong -->
        <test-method status="PASS" signature="testMultLong(long, long, long)[pri:0, instance:testng.calculator.MultLongTest@7bfcd12c]" name="testMultLong" duration-ms="0" started-at="2017-06-05T16:20:04Z" data-provider="multDataProvider" finished-at="2017-06-05T16:20:04Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[1500]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[2]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[3000]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testMultLong -->
        <test-method status="PASS" signature="testMultLong(long, long, long)[pri:0, instance:testng.calculator.MultLongTest@7bfcd12c]" name="testMultLong" duration-ms="0" started-at="2017-06-05T16:20:04Z" data-provider="multDataProvider" finished-at="2017-06-05T16:20:04Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[-1]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[-2]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[2]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testMultLong -->
      </class> <!-- testng.calculator.MultLongTest -->
      <class name="testng.calculator.SumDoubleTest">
        <test-method status="PASS" signature="setUp()[pri:0, instance:testng.calculator.SumDoubleTest@490d6c15]" name="setUp" is-config="true" duration-ms="1" started-at="2017-06-05T16:20:04Z" finished-at="2017-06-05T16:20:04Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="testSumDouble(double, double, double)[pri:0, instance:testng.calculator.SumDoubleTest@490d6c15]" name="testSumDouble" duration-ms="0" started-at="2017-06-05T16:20:04Z" data-provider="sumDataProvider" finished-at="2017-06-05T16:20:04Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[1.0]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[1.0]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[2.0]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSumDouble -->
        <test-method status="PASS" signature="testSumDouble(double, double, double)[pri:0, instance:testng.calculator.SumDoubleTest@490d6c15]" name="testSumDouble" duration-ms="0" started-at="2017-06-05T16:20:04Z" data-provider="sumDataProvider" finished-at="2017-06-05T16:20:04Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[2.1]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[-1.1]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[1.0]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSumDouble -->
        <test-method status="PASS" signature="testSumDouble(double, double, double)[pri:0, instance:testng.calculator.SumDoubleTest@490d6c15]" name="testSumDouble" duration-ms="0" started-at="2017-06-05T16:20:04Z" data-provider="sumDataProvider" finished-at="2017-06-05T16:20:04Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[0.0]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[0.0]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[0.0]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSumDouble -->
        <test-method status="PASS" signature="testSumDouble(double, double, double)[pri:0, instance:testng.calculator.SumDoubleTest@490d6c15]" name="testSumDouble" duration-ms="0" started-at="2017-06-05T16:20:04Z" data-provider="sumDataProvider" finished-at="2017-06-05T16:20:04Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[-1.5]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[-1.6]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[-3.1]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSumDouble -->
        <test-method status="FAIL" signature="testSumDouble(double, double, double)[pri:0, instance:testng.calculator.SumDoubleTest@490d6c15]" name="testSumDouble" duration-ms="0" started-at="2017-06-05T16:20:04Z" data-provider="sumDataProvider" finished-at="2017-06-05T16:20:04Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[1.5555]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[1.0]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[2.5555]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [2.5555] but found [2.5555000000000003]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [2.5555] but found [2.5555000000000003]
	at org.testng.Assert.fail(Assert.java:93)
	at org.testng.Assert.failNotEquals(Assert.java:512)
	at org.testng.Assert.assertEqualsImpl(Assert.java:134)
	at org.testng.Assert.assertEquals(Assert.java:115)
	at org.testng.Assert.assertEquals(Assert.java:178)
	at testng.calculator.SumDoubleTest.testSumDouble(SumDoubleTest.java:15)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:108)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:661)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:869)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1193)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:126)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
	at org.testng.TestRunner.privateRun(TestRunner.java:744)
	at org.testng.TestRunner.run(TestRunner.java:602)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:380)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:375)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:340)
	at org.testng.SuiteRunner.run(SuiteRunner.java:289)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1301)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1297)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1226)
	at org.testng.TestNG.runSuites(TestNG.java:1144)
	at org.testng.TestNG.run(TestNG.java:1115)
	at testng.runner.TestRunner.main(TestRunner.java:33)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSumDouble -->
        <test-method status="PASS" signature="testSumDouble(double, double, double)[pri:0, instance:testng.calculator.SumDoubleTest@490d6c15]" name="testSumDouble" duration-ms="0" started-at="2017-06-05T16:20:04Z" data-provider="sumDataProvider" finished-at="2017-06-05T16:20:04Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[2.5]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[2.5]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[5.0]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSumDouble -->
      </class> <!-- testng.calculator.SumDoubleTest -->
      <class name="testng.calculator.DivDoubleTest">
        <test-method status="PASS" signature="testDivDouble(double, double, double)[pri:0, instance:testng.calculator.DivDoubleTest@5479e3f]" name="testDivDouble" duration-ms="0" started-at="2017-06-05T16:20:04Z" data-provider="divDataProvider" finished-at="2017-06-05T16:20:04Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[-8.0]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[4.0]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[-2.0]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testDivDouble -->
        <test-method status="PASS" signature="testDivDouble(double, double, double)[pri:0, instance:testng.calculator.DivDoubleTest@5479e3f]" name="testDivDouble" duration-ms="0" started-at="2017-06-05T16:20:04Z" data-provider="divDataProvider" finished-at="2017-06-05T16:20:04Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[-4.0]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[-2.5]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[1.6]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testDivDouble -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:testng.calculator.DivDoubleTest@5479e3f]" name="setUp" is-config="true" duration-ms="0" started-at="2017-06-05T16:20:04Z" finished-at="2017-06-05T16:20:04Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="testDivDouble(double, double, double)[pri:0, instance:testng.calculator.DivDoubleTest@5479e3f]" name="testDivDouble" duration-ms="1" started-at="2017-06-05T16:20:04Z" data-provider="divDataProvider" finished-at="2017-06-05T16:20:04Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[2.6]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[-1.0]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[-2.6]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testDivDouble -->
        <test-method status="PASS" signature="testDivDouble(double, double, double)[pri:0, instance:testng.calculator.DivDoubleTest@5479e3f]" name="testDivDouble" duration-ms="0" started-at="2017-06-05T16:20:04Z" data-provider="divDataProvider" finished-at="2017-06-05T16:20:04Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[20.8]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[2.0]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[10.4]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testDivDouble -->
        <test-method status="FAIL" signature="divByZero()[pri:1, instance:testng.calculator.DivDoubleTest@5479e3f]" name="divByZero" duration-ms="0" started-at="2017-06-05T16:20:04Z" finished-at="2017-06-05T16:20:04Z">
          <exception class="org.testng.TestException">
            <message>
              <![CDATA[
Method DivDoubleTest.divByZero()[pri:1, instance:testng.calculator.DivDoubleTest@5479e3f] should have thrown an exception of type class java.lang.NumberFormatException]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.testng.TestException: 
Method DivDoubleTest.divByZero()[pri:1, instance:testng.calculator.DivDoubleTest@5479e3f] should have thrown an exception of type class java.lang.NumberFormatException
	at org.testng.internal.ExpectedExceptionsHolder.noException(ExpectedExceptionsHolder.java:89)
	at org.testng.internal.Invoker.handleInvocationResults(Invoker.java:1416)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:695)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:869)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1193)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:126)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
	at org.testng.TestRunner.privateRun(TestRunner.java:744)
	at org.testng.TestRunner.run(TestRunner.java:602)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:380)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:375)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:340)
	at org.testng.SuiteRunner.run(SuiteRunner.java:289)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1301)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1297)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1226)
	at org.testng.TestNG.runSuites(TestNG.java:1144)
	at org.testng.TestNG.run(TestNG.java:1115)
	at testng.runner.TestRunner.main(TestRunner.java:33)
]]>
            </full-stacktrace>
          </exception> <!-- org.testng.TestException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- divByZero -->
      </class> <!-- testng.calculator.DivDoubleTest -->
    </test> <!-- MainFunctionsTest -->
    <test name="PowSqrtTest" duration-ms="3" started-at="2017-06-05T13:20:04Z" finished-at="2017-06-05T13:20:04Z">
      <class name="testng.calculator.SqrtTest">
        <test-method status="PASS" signature="setUp()[pri:0, instance:testng.calculator.SqrtTest@270421f5]" name="setUp" is-config="true" duration-ms="1" started-at="2017-06-05T16:20:04Z" finished-at="2017-06-05T16:20:04Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="testSqrtDouble(double, double)[pri:0, instance:testng.calculator.SqrtTest@270421f5]" name="testSqrtDouble" duration-ms="0" started-at="2017-06-05T16:20:04Z" data-provider="sqrtDataProvider" finished-at="2017-06-05T16:20:04Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[4.0]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[2.0]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSqrtDouble -->
        <test-method status="PASS" signature="testSqrtDouble(double, double)[pri:0, instance:testng.calculator.SqrtTest@270421f5]" name="testSqrtDouble" duration-ms="0" started-at="2017-06-05T16:20:04Z" data-provider="sqrtDataProvider" finished-at="2017-06-05T16:20:04Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[156.25]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[12.5]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSqrtDouble -->
        <test-method status="PASS" signature="testSqrtDouble(double, double)[pri:0, instance:testng.calculator.SqrtTest@270421f5]" name="testSqrtDouble" duration-ms="0" started-at="2017-06-05T16:20:04Z" data-provider="sqrtDataProvider" finished-at="2017-06-05T16:20:04Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[1.21]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[1.1]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSqrtDouble -->
        <test-method status="PASS" signature="testSqrtDouble(double, double)[pri:0, instance:testng.calculator.SqrtTest@270421f5]" name="testSqrtDouble" duration-ms="0" started-at="2017-06-05T16:20:04Z" data-provider="sqrtDataProvider" finished-at="2017-06-05T16:20:04Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[0.0]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[0.0]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSqrtDouble -->
        <test-method status="FAIL" signature="negativeArg()[pri:0, instance:testng.calculator.SqrtTest@270421f5]" name="negativeArg" duration-ms="0" started-at="2017-06-05T16:20:04Z" finished-at="2017-06-05T16:20:04Z">
          <exception class="org.testng.TestException">
            <message>
              <![CDATA[
Method SqrtTest.negativeArg()[pri:0, instance:testng.calculator.SqrtTest@270421f5] should have thrown an exception of type class java.lang.NumberFormatException]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.testng.TestException: 
Method SqrtTest.negativeArg()[pri:0, instance:testng.calculator.SqrtTest@270421f5] should have thrown an exception of type class java.lang.NumberFormatException
	at org.testng.internal.ExpectedExceptionsHolder.noException(ExpectedExceptionsHolder.java:89)
	at org.testng.internal.Invoker.handleInvocationResults(Invoker.java:1416)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:695)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:869)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1193)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:126)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
	at org.testng.TestRunner.privateRun(TestRunner.java:744)
	at org.testng.TestRunner.run(TestRunner.java:602)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:380)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:375)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:340)
	at org.testng.SuiteRunner.run(SuiteRunner.java:289)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1301)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1297)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1226)
	at org.testng.TestNG.runSuites(TestNG.java:1144)
	at org.testng.TestNG.run(TestNG.java:1115)
	at testng.runner.TestRunner.main(TestRunner.java:33)
]]>
            </full-stacktrace>
          </exception> <!-- org.testng.TestException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- negativeArg -->
      </class> <!-- testng.calculator.SqrtTest -->
      <class name="testng.calculator.PowTest">
        <test-method status="PASS" signature="setUp()[pri:0, instance:testng.calculator.PowTest@5a42bbf4]" name="setUp" is-config="true" duration-ms="0" started-at="2017-06-05T16:20:04Z" finished-at="2017-06-05T16:20:04Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="testPowDouble(double, double, double)[pri:0, instance:testng.calculator.PowTest@5a42bbf4]" name="testPowDouble" duration-ms="1" started-at="2017-06-05T16:20:04Z" data-provider="powDataProvider" finished-at="2017-06-05T16:20:04Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[2.0]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[1.0]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[2.0]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testPowDouble -->
        <test-method status="PASS" signature="testPowDouble(double, double, double)[pri:0, instance:testng.calculator.PowTest@5a42bbf4]" name="testPowDouble" duration-ms="0" started-at="2017-06-05T16:20:04Z" data-provider="powDataProvider" finished-at="2017-06-05T16:20:04Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[-2.0]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[2.0]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[4.0]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testPowDouble -->
        <test-method status="PASS" signature="testPowDouble(double, double, double)[pri:0, instance:testng.calculator.PowTest@5a42bbf4]" name="testPowDouble" duration-ms="0" started-at="2017-06-05T16:20:04Z" data-provider="powDataProvider" finished-at="2017-06-05T16:20:04Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[25.0]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[0.0]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[1.0]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testPowDouble -->
        <test-method status="PASS" signature="testPowDouble(double, double, double)[pri:0, instance:testng.calculator.PowTest@5a42bbf4]" name="testPowDouble" duration-ms="0" started-at="2017-06-05T16:20:04Z" data-provider="powDataProvider" finished-at="2017-06-05T16:20:04Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[2.0]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[-1.0]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[0.5]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testPowDouble -->
        <test-method status="FAIL" signature="testPowDouble(double, double, double)[pri:0, instance:testng.calculator.PowTest@5a42bbf4]" name="testPowDouble" duration-ms="0" started-at="2017-06-05T16:20:04Z" data-provider="powDataProvider" finished-at="2017-06-05T16:20:04Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[-2.2]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[2.0]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[4.84]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [4.84] but found [4.840000000000001]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [4.84] but found [4.840000000000001]
	at org.testng.Assert.fail(Assert.java:93)
	at org.testng.Assert.failNotEquals(Assert.java:512)
	at org.testng.Assert.assertEqualsImpl(Assert.java:134)
	at org.testng.Assert.assertEquals(Assert.java:115)
	at org.testng.Assert.assertEquals(Assert.java:178)
	at testng.calculator.PowTest.testPowDouble(PowTest.java:14)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:108)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:661)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:869)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1193)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:126)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
	at org.testng.TestRunner.privateRun(TestRunner.java:744)
	at org.testng.TestRunner.run(TestRunner.java:602)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:380)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:375)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:340)
	at org.testng.SuiteRunner.run(SuiteRunner.java:289)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1301)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1297)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1226)
	at org.testng.TestNG.runSuites(TestNG.java:1144)
	at org.testng.TestNG.run(TestNG.java:1115)
	at testng.runner.TestRunner.main(TestRunner.java:33)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testPowDouble -->
        <test-method status="FAIL" signature="testPowDouble(double, double, double)[pri:0, instance:testng.calculator.PowTest@5a42bbf4]" name="testPowDouble" duration-ms="0" started-at="2017-06-05T16:20:04Z" data-provider="powDataProvider" finished-at="2017-06-05T16:20:04Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[81.0]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[0.25]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[3.0]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [3.0] but found [1.0]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [3.0] but found [1.0]
	at org.testng.Assert.fail(Assert.java:93)
	at org.testng.Assert.failNotEquals(Assert.java:512)
	at org.testng.Assert.assertEqualsImpl(Assert.java:134)
	at org.testng.Assert.assertEquals(Assert.java:115)
	at org.testng.Assert.assertEquals(Assert.java:178)
	at testng.calculator.PowTest.testPowDouble(PowTest.java:14)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:108)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:661)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:869)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1193)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:126)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
	at org.testng.TestRunner.privateRun(TestRunner.java:744)
	at org.testng.TestRunner.run(TestRunner.java:602)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:380)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:375)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:340)
	at org.testng.SuiteRunner.run(SuiteRunner.java:289)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1301)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1297)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1226)
	at org.testng.TestNG.runSuites(TestNG.java:1144)
	at org.testng.TestNG.run(TestNG.java:1115)
	at testng.runner.TestRunner.main(TestRunner.java:33)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testPowDouble -->
      </class> <!-- testng.calculator.PowTest -->
    </test> <!-- PowSqrtTest -->
    <test name="InfinityTest" duration-ms="0" started-at="2017-06-05T13:20:04Z" finished-at="2017-06-05T13:20:04Z">
      <class name="testng.calculator.TgTest">
        <test-method status="FAIL" signature="tg90()[pri:0, instance:testng.calculator.TgTest@6aceb1a5]" name="tg90" duration-ms="0" started-at="2017-06-05T16:20:04Z" finished-at="2017-06-05T16:20:04Z">
          <exception class="java.lang.NullPointerException">
            <full-stacktrace>
              <![CDATA[java.lang.NullPointerException
	at testng.calculator.TgTest.tg90(TgTest.java:30)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:108)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:661)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:869)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1193)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:126)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
	at org.testng.TestRunner.privateRun(TestRunner.java:744)
	at org.testng.TestRunner.run(TestRunner.java:602)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:380)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:375)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:340)
	at org.testng.SuiteRunner.run(SuiteRunner.java:289)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1301)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1297)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1226)
	at org.testng.TestNG.runSuites(TestNG.java:1144)
	at org.testng.TestNG.run(TestNG.java:1115)
	at testng.runner.TestRunner.main(TestRunner.java:33)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.NullPointerException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tg90 -->
      </class> <!-- testng.calculator.TgTest -->
      <class name="testng.calculator.PowTest">
        <test-method status="PASS" signature="setPhrase()[pri:0, instance:testng.calculator.PowTest@5a42bbf4]" name="setPhrase" is-config="true" duration-ms="7" started-at="2017-06-05T16:20:04Z" finished-at="2017-06-05T16:20:04Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setPhrase -->
        <test-method status="PASS" signature="setPhraseDone()[pri:0, instance:testng.calculator.PowTest@5a42bbf4]" name="setPhraseDone" is-config="true" duration-ms="0" started-at="2017-06-05T16:20:04Z" finished-at="2017-06-05T16:20:04Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setPhraseDone -->
      </class> <!-- testng.calculator.PowTest -->
      <class name="testng.calculator.CtgTest">
        <test-method status="FAIL" signature="ctg0()[pri:0, instance:testng.calculator.CtgTest@2d6d8735]" name="ctg0" duration-ms="0" started-at="2017-06-05T16:20:04Z" finished-at="2017-06-05T16:20:04Z">
          <exception class="java.lang.NullPointerException">
            <full-stacktrace>
              <![CDATA[java.lang.NullPointerException
	at testng.calculator.CtgTest.ctg0(CtgTest.java:29)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:108)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:661)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:869)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1193)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:126)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
	at org.testng.TestRunner.privateRun(TestRunner.java:744)
	at org.testng.TestRunner.run(TestRunner.java:602)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:380)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:375)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:340)
	at org.testng.SuiteRunner.run(SuiteRunner.java:289)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1301)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1297)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1226)
	at org.testng.TestNG.runSuites(TestNG.java:1144)
	at org.testng.TestNG.run(TestNG.java:1115)
	at testng.runner.TestRunner.main(TestRunner.java:33)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.NullPointerException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ctg0 -->
      </class> <!-- testng.calculator.CtgTest -->
    </test> <!-- InfinityTest -->
  </suite> <!-- CalculatorTest (0) -->
</testng-results>
